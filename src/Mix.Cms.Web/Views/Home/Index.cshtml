@using Mix.Cms.Lib;
@using Mix.Cms.Lib.Services;
@model Mix.Cms.Lib.Interfaces.MvcViewModel
@{
    var assetFolder = MixCmsHelper.GetAssetFolder(ViewBag.culture);
    string master = MixService.GetConfig<string>(AppSettingKeywords.ThemeName, ViewBag.culture);
    string templateFolder = MixCmsHelper.GetTemplateFolder(ViewBag.culture);
    string layout = Model.Layout ?? "Masters/_Layout.cshtml";
    var masterTemplate = await MixCmsHelper.GetTemplateByPath(master, layout);
    Layout = $"{templateFolder}/{layout}";
    var p = MixCmsHelper.GetPostlistByMeta<Mix.Cms.Lib.ViewModels.MixPosts.ReadMvcViewModel>(Context, ViewBag.culture as string
        , MixDatabaseNames.SYSTEM_TAG);
    var posts = Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetModelistByMeta<Mix.Cms.Lib.ViewModels.MixPosts.ReadMvcViewModel>(
        MixDatabaseNames.SYSTEM_TAG, Context.Request.Query["tag"],
        ViewBag.culture as string, "CreatedDateTime", Mix.Heart.Enums.MixHeartEnums.DisplayDirection.Desc, 10, 0);
}
<input type="hidden" id="view-type" value="Alias" />
<input type="hidden" id="view-id" value="@Model.Id" />

@if (!string.IsNullOrEmpty(Model.TemplatePath))
{

    try
    {
       @await Html.PartialAsync(Model.TemplatePath, Model)
    }
    catch (System.InvalidOperationException invalidOperationException)
    {
        <p class="danger text-center has-error">Unable load template with Exception detail below:</p>
        <code>
            @invalidOperationException
        </code>

    }
    catch (Exception ex)
    {
        <code>
            @ex
        </code>
        <p class="danger text-center has-error">Unable load template</p>
    }
}
else
{
    <section class="container">
        <h1>@(MixService.Translate<string>("Please choose template", ViewBag.culture))</h1>
    </section>
}
@{
    string url = ViewData["OgUrl"] != null ? (string)ViewData["OgUrl"] : Model.DetailsUrl;
    string title = ViewData["OgTitle"] != null ? (string)ViewData["OgTitle"] : Model.SeoTitle;
    string desc = ViewData["OgDescription"] != null ? (string)ViewData["OgDescription"] : Model.SeoDescription;
    string image = ViewData["OgImage"] != null ? (string)ViewData["OgImage"] : Model.ThumbnailUrl;
}
@section Seo{
    <title>@(MixService.GetConfig<string>("SiteName", ViewBag.culture)) - @Model.SeoTitle</title>
    <meta property="og:type" content="post" />
    <!--points to the regular HTML version of the AMP HTML document or to itself if no such HTML version exists-->
    <link rel="canonical" href="@url" />
    <meta property="og:url" content="@url" />
    <meta property="og:title" content="@title" />
    <meta property="og:description" content="@desc" />
    <meta property="og:image" content="@image" />
    <meta name="title" content="@title" />
    <meta name="description" content="@desc" />
    <meta name="keywords" content="@desc" />
}
@section Styles{
    @Html.Raw(masterTemplate?.Styles)
    @Html.Raw(Model.View?.Styles)
}
@section Scripts{
    @Html.Raw(masterTemplate?.Scripts)
    @Html.Raw(Model.View?.Scripts)
}