'use strict';
var app = angular.module('MixPortal',
    ['ngRoute', 'ngFileUpload', 'LocalStorageModule','components']);
    var modules = angular.module('components', []);
app.config(function ($routeProvider, $locationProvider, $sceProvider) {
    $locationProvider.html5Mode(true);

    $routeProvider.when("/security/login", {
        controller: "LoginController",
        templateUrl: "/app/app-security/pages/login/view.html"
    });


    $routeProvider.when("/security/register", {
        controller: "RegisterController",
        templateUrl: "/app/app-security/pages/register/view.html"
    });
    $routeProvider.when("/security/forgot-password", {
        controller: "ForgotPasswordController",
        templateUrl: "/app/app-security/pages/forgot-password/view.html"
    });
    $routeProvider.when("/security/reset-password", {
        controller: "ResetPasswordController",
        templateUrl: "/app/app-security/pages/reset-password/view.html"
    });

    $routeProvider.otherwise({ redirectTo: "/security/login" });
});

'use strict';
app.controller('LoginController', [ '$rootScope', '$scope', '$routeParams', '$location', 'AuthService', 
    function ($rootScope, $scope, $routeParams, $location, authService) {
    if (authService.authentication && authService.authentication.isAuth && authService.authentication && authService.authentication.isAdmin) {
        authService.referredUrl = $location.path();
        $location.path('/portal');
    }

    $scope.pageClass = 'page-login';

    $scope.loginData = {
        userName: "",
        password: "",
        rememberMe: false
    };

    $scope.message = "";
    $scope.$on('$viewContentLoaded', function () {
        $rootScope.isBusy = false;
    });
    $scope.login = async function () {
        var result = await authService.login($scope.loginData);
        if (result) {
            $rootScope.isBusy = false;
            $scope.message = result.errors[0];
            $scope.$apply();
        }
        
    };

$scope.authExternalProvider = function (provider) {

    var redirectUri = location.protocol + '//' + location.host + '/authcomplete.html';

    var externalProviderUrl = ngAuthSettings.apiServiceBaseUri + "api/Account/ExternalLogin?provider=" + provider
        + "&response_type=token&client_id=" + ngAuthSettings.clientId
        + "&redirect_uri=" + redirectUri;
    window.$windowScope = $scope;

    var oauthWindow = window.open(externalProviderUrl, "Authenticate Account", "location=0,status=0,width=600,height=750");
};

$scope.authCompletedCB = function (fragment) {

    $scope.$apply(function () {

        if (fragment.haslocalaccount === 'False') {

            authService.logOut();

            authService.externalAuthData = {
                provider: fragment.provider,
                userName: fragment.external_user_name,
                externalAccessToken: fragment.external_access_token
            };

            $location.path('/associate');

        }
        else {
            //Obtain access token and redirect to orders
            var externalData = { provider: fragment.provider, externalAccessToken: fragment.external_access_token };
            authService.obtainAccessToken(externalData).then(function (response) {

                $location.path('/orders');

            },
                function (err) {
                    $scope.message = err.error_description;
                });
        }

    });
}
}]);
'use strict';
app.controller('RegisterController', 
    ['$scope', '$rootScope', 'RegisterServices', 
    function ($scope, $rootScope, services) {
    $scope.user = {
        userName: '',
        email: '',
        password: '',
        confirmPassword: '',
        isAgreed: false
    }
    $scope.register = async function () {
        if (!$scope.user.isAgreed) {
            $rootScope.showMessage('Please agreed with our policy', 'warning');
        } else {
            if ($scope.password !== $scope.confirmPassword) {
                $rootScope.showErrors(['Confirm Password is not matched']);
            } else {
                $rootScope.isBusy = true;
                var result = await services.register($scope.user);
                if (result.isSucceed) {
                    $rootScope.isBusy = false;
                    window.location.href = '/security/login';
                } else {
                    if (result) {
                        $rootScope.showErrors(result.errors);
                    }
                    $rootScope.isBusy = false;
                    $scope.$apply();
                }
            }
        }
    }
}]);
'use strict';
app.factory('RegisterServices', ['$http', 'CommonService', function ($http, commonService) {

    //var serviceBase = 'http://ngauthenticationapi.azurewebsites.net/';

    var usersServiceFactory = {};
    var apiUrl = '/portal/';
    var _register = async function (user) {
        var apiUrl = '/account/register';
        var req = {
            method: 'POST',
            url: apiUrl,
            data: JSON.stringify(user)
        };

        return await commonService.getApiResult(req);
    };

    usersServiceFactory.register = _register;
    return usersServiceFactory;

}]);

'use strict';
app.controller('ForgotPasswordController', [ '$rootScope', '$scope', 'ngAppSettings', '$location', 'AuthService', function ($rootScope, $scope, ngAppSettings, $location, authService) {
    if (authService.authentication && authService.authentication.isAuth && authService.authentication && authService.authentication.isAdmin) {
        authService.referredUrl = $location.path();
        $location.path('/portal');
    }
    $scope.pageClass = 'page-forgot-password';
    $scope.isSucceed = false;
    $scope.viewModel = {
        email:  null
    };

    $scope.message = "";
    $scope.$on('$viewContentLoaded', function () {
        $rootScope.isBusy = false;
        authService.referredUrl = "/security/login";
    });
    $scope.submit = async function () {        
        
        var result = await authService.forgotPassword($scope.viewModel);
        if (result.isSucceed) {
            $rootScope.isBusy = false;
            $scope.isSucceed = true;
            $scope.$apply();
        }
        else{
            $rootScope.isBusy = false;
            $rootScope.showErrors(result.errors);
        }
    };

$scope.authExternalProvider = function (provider) {

    var redirectUri = location.protocol + '//' + location.host + '/authcomplete.html';

    var externalProviderUrl = ngAuthSettings.apiServiceBaseUri + "api/Account/ExternalLogin?provider=" + provider
        + "&response_type=token&client_id=" + ngAuthSettings.clientId
        + "&redirect_uri=" + redirectUri;
    window.$windowScope = $scope;

    var oauthWindow = window.open(externalProviderUrl, "Authenticate Account", "location=0,status=0,width=600,height=750");
};

$scope.authCompletedCB = function (fragment) {

    $scope.$apply(function () {

        if (fragment.haslocalaccount === 'False') {

            authService.logOut();

            authService.externalAuthData = {
                provider: fragment.provider,
                userName: fragment.external_user_name,
                externalAccessToken: fragment.external_access_token
            };

            $location.path('/associate');

        }
        else {
            //Obtain access token and redirect to orders
            var externalData = { provider: fragment.provider, externalAccessToken: fragment.external_access_token };
            authService.obtainAccessToken(externalData).then(function (response) {

                $location.path('/orders');

            },
                function (err) {
                    $scope.message = err.error_description;
                });
        }

    });
}
}]);
'use strict';
app.controller('ResetPasswordController',
    ['$scope', '$rootScope', 'AuthService','$routeParams',
        function ($scope, $rootScope, service, $routeParams) {
            $scope.user = {
                email: '',
                password: '',
                confirmPassword: '',
                code: '',
            }
            $scope.init = function(){
                $scope.user.code = $routeParams.token;
            };
            $scope.submit = async function () {

                if ($scope.password !== $scope.confirmPassword) {
                    $rootScope.showErrors(['Confirm Password is not matched']);
                } else {
                    $rootScope.isBusy = true;
                    var result = await service.resetPassword($scope.user);
                    if (result.isSucceed) {
                        $rootScope.isBusy = false;
                        window.location.href = '/security/login';
                    } else {
                        if (result) {
                            $rootScope.showErrors(result.errors);
                        }
                        $rootScope.isBusy = false;
                        $scope.$apply();
                    }
                }
            }
        }]);
'use strict';
app.factory('RegisterServices', ['$http', 'CommonService', function ($http, commonService) {

    //var serviceBase = 'http://ngauthenticationapi.azurewebsites.net/';

    var usersServiceFactory = {};
    var apiUrl = '/portal/';
    var _register = async function (user) {
        var apiUrl = '/account/register';
        var req = {
            method: 'POST',
            url: apiUrl,
            data: JSON.stringify(user)
        };

        return await commonService.getApiResult(req);
    };

    usersServiceFactory.register = _register;
    return usersServiceFactory;

}]);
